
//Задание № 1
// Почему код даёт именно такие результаты?
/*
var a = 1, b = 1, c, d;
c = ++a; alert(c);           // 2  - инкрементирование производится сразу, а возврат — уже с
//обновленным значением
d = b++; alert(d);           // 1  - В постфиксной форме сначала происходит возвращение значения, а потом выполняется
//инкрементирование
c = (2+ ++a); alert(c);      // 5  - 2 + 3 (поскольку 2 получилось из инкрементирования выше плюс инкрементирование в этой строке)
d = (2+ b++); alert(d);      // 4  - b в выражении возвращалось как равная 2, так как используется постфиксное инкрементирование
alert(a);                    // 3  - число с учётом всех инкрементирований
alert(b);                   // 3  - число с учётом всех инкрементирований
*/


//Задание № 2
// Чему будет равен x в примере ниже?
/*
var a = 2;
var x = 1 + (a *= 2); = 5 // 1 + (2 * 2)
alert(x);*/


//Задание № 3
/*Объявить две целочисленные переменные a и b и задать им произвольные начальные значения. Затем написать скрипт, который работает по следующему принципу:
если a и b положительные, вывести их разность;
если а и b отрицательные, вывести их произведение;
если а и b разных знаков, вывести их сумму; ноль можно считать положительным числом*/
/*
let a;
let b;

a = +prompt("Введите число а:");
b = +prompt("Введите число b:");
 if (a >= 0 &&  b >= 0)
     alert(a - b);
 else if (a < 0 &&  b < 0)
     alert(a * b);
 else
    alert(a + b);*/


 //Задание № 4
 //Присвоить переменной а значение в промежутке [0..15]. С помощью оператора switch организовать вывод чисел от a до 15.
/*
var a;
a = +prompt("Введите число а в диапазоне от 0 до 15 включительно:");
switch (a){
case (1):
    alert(1);
case (2):
    alert(2);
case (3):
    alert(3);
case (4):
    alert(4);
case (5):
    alert(5);
case (6):
    alert(6);
case (7):
    alert(7);
case (8):
    alert(8);
case (9):
    alert(9);
case (10):
    alert(10);
case (11):
    alert(11);
case (12):
    alert(12);
case (13):
    alert(13);
case (14):
    alert(14);
case (15):
    alert(15);
}*/


 //Задание № 5
 //Реализовать основные 4 арифметические операции в виде функций с двумя параметрами. Обязательно использовать оператор return.

//a = +prompt("Введите число а:");
//b = +prompt("Введите число b:");

function sum(x, y)
{
return (x + y);
}

function division(x, y)
{
return (x / y);
}

function subtraction(x, y)
{
return (x - y);
}

function multiplier(x, y)
{
return (x - y);
}

//alert(multiplier(a, b));


 //Задание № 6
 //Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation), где arg1, arg2 – значения аргументов,
 //operation – строка с названием операции. В зависимости от переданного значения операции выполнить одну из арифметических
 //операций (использовать функции из пункта 5) и вернуть полученное значение (использовать switch).

let operation;
let a;
let b;

a = +prompt("Введите число а:");
b = +prompt("Введите число b:");
operation = +prompt("Введите номер операции: 1) sum; 2) division; 3) subtraction; 4) multiplier ");

function mathOperation(a, b, operation) {
    switch (operation) {
        case (1):
            alert(sum(a, b));
            break;
        case (2):
            alert(division (a, b));
            break;
        case (3):
            alert(subtraction(a, b));
            break;
        case (4):
            alert(multiplier(a, b));
            break;
}}
mathOperation(a, b, operation);
=======
//Задание № 1
// Почему код даёт именно такие результаты?
/*
var a = 1, b = 1, c, d;
c = ++a; alert(c);           // 2  - инкрементирование производится сразу, а возврат — уже с
//обновленным значением
d = b++; alert(d);           // 1  - В постфиксной форме сначала происходит возвращение значения, а потом выполняется
//инкрементирование
c = (2+ ++a); alert(c);      // 5  - 2 + 3 (поскольку 2 получилось из инкрементирования выше плюс инкрементирование в этой строке)
d = (2+ b++); alert(d);      // 4  - b в выражении возвращалось как равная 2, так как используется постфиксное инкрементирование
alert(a);                    // 3  - число с учётом всех инкрементирований
alert(b);                   // 3  - число с учётом всех инкрементирований
*/


//Задание № 2
// Чему будет равен x в примере ниже?
/*
var a = 2;
var x = 1 + (a *= 2); = 5 // 1 + (2 * 2)
alert(x);*/


//Задание № 3
/*Объявить две целочисленные переменные a и b и задать им произвольные начальные значения. Затем написать скрипт, который работает по следующему принципу:
если a и b положительные, вывести их разность;
если а и b отрицательные, вывести их произведение;
если а и b разных знаков, вывести их сумму; ноль можно считать положительным числом*/
/*
let a;
let b;

a = +prompt("Введите число а:");
b = +prompt("Введите число b:");
 if (a >= 0 &&  b >= 0)
     alert(a - b);
 else if (a < 0 &&  b < 0)
     alert(a * b);
 else
    alert(a + b);*/


 //Задание № 4
 //Присвоить переменной а значение в промежутке [0..15]. С помощью оператора switch организовать вывод чисел от a до 15.
/*
var a;
a = +prompt("Введите число а в диапазоне от 0 до 15 включительно:");
switch (a){
case (1):
    alert(1);
case (2):
    alert(2);
case (3):
    alert(3);
case (4):
    alert(4);
case (5):
    alert(5);
case (6):
    alert(6);
case (7):
    alert(7);
case (8):
    alert(8);
case (9):
    alert(9);
case (10):
    alert(10);
case (11):
    alert(11);
case (12):
    alert(12);
case (13):
    alert(13);
case (14):
    alert(14);
case (15):
    alert(15);
}*/


 //Задание № 5
 //Реализовать основные 4 арифметические операции в виде функций с двумя параметрами. Обязательно использовать оператор return.

//a = +prompt("Введите число а:");
//b = +prompt("Введите число b:");

function sum(x, y)
{
return (x + y);
}

function division(x, y)
{
return (x / y);
}

function subtraction(x, y)
{
return (x - y);
}

function multiplier(x, y)
{
return (x - y);
}

//alert(multiplier(a, b));


 //Задание № 6
 //Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation), где arg1, arg2 – значения аргументов,
 //operation – строка с названием операции. В зависимости от переданного значения операции выполнить одну из арифметических
 //операций (использовать функции из пункта 5) и вернуть полученное значение (использовать switch).

let operation;
let a;
let b;

a = +prompt("Введите число а:");
b = +prompt("Введите число b:");
operation = +prompt("Введите номер операции: 1) sum; 2) division; 3) subtraction; 4) multiplier ");

function mathOperation(a, b, operation) {
    switch (operation) {
        case (1):
            alert(sum(a, b));
            break;
        case (2):
            alert(division (a, b));
            break;
        case (3):
            alert(subtraction(a, b));
            break;
        case (4):
            alert(multiplier(a, b));
            break;
}}
mathOperation(a, b, operation);
